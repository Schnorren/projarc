SLIDE DA APRESENTACAO
https://www.canva.com/design/DAGS5RpzfTY/PCiPbsPp8j-IqdavczREqw/edit?utm_content=DAGS5RpzfTY&utm_campaign=designshare&utm_medium=link2&utm_source=sharebutton




REGRAS


REGRA 1 - (AlocacaoService)
Um recurso não pode ser associado a mais de uma turma ao mesmo tempo.
* A lógica impede a alocação duplicada do mesmo recurso no mesmo horário e data.

Tentativa de violação da regra utilizando o POST /api/alocacoes
{
  "data": "2024-01-15",
  "horario": "A",
  "aulaId": 2,
  "recursoCodigo": 1
}
Resultado: Recurso não disponível na data e horário selecionados.



REGRA 2 - (AlocacaoService)
Um recurso só pode ser associado a uma turma nos horários programados da turma.
* A alocação do recurso está restrita aos horários programados da aula.

Tentativa de violação da regra utilizando o POST /api/alocacoes
{
  "data": "2024-01-15",
  "horario": "B",
  "aulaId": 1,
  "recursoCodigo": 1
}
Resultado: O recurso só pode ser alocado durante o horário da aula.






REGRA 3 - (AulaService e TurmaService)
Cada horário de turma utiliza o sistema de horários da universidade.
* O uso de um enum para horários garante a conformidade com o sistema de horários da universidade.

Tentativa de violação da regra utilizando o POST /api/turmas
{
  "codigo": 108,
  "disciplinaCodigo": "95300-04",
  "professorId": 2,
  "horario": "Z",
  "diaSemana": "SEGUNDA"
}
Resultado: Valor inválido 'Z' para o campo 'horario'. Valores permitidos: [A, B, C, D, E, F, G, H, I, J, K, L, M, N, P].



REGRA 4 - (DisciplinaService)
Cada código de disciplina é único.
* A unicidade do código da disciplina é garantida no momento da criação.

Tentativa de violação da regra utilizando o POST /api/disciplinas
{
  "codigo": "CS101",
  "nome": "Algoritmos Avançados",
  "cargaHoraria": 60
}
Resultado: Já existe uma disciplina com o código: CS101





REGRA 5 - (TurmaService)
Cada código de turma deve ser único para a mesma disciplina.
* O código da turma é restrito a ser único dentro de cada disciplina.

Tentativa de violação da regra utilizando o POST /api/turmas
{
  "codigo": 101,
  "disciplinaCodigo": "95300-04",
  "professorId": 3,
  "horario": "A",
  "diaSemana": "TERCA"
}
Resultado: Já existe uma turma com o código: 1 para a disciplina: ProgramaÃ§Ã£o I




REGRA 6 - (TurmaService)
Um professor não pode ser alocado para duas ou mais turmas no mesmo horário e dia da semana.
* A lógica impede que um professor seja alocado para múltiplas turmas no mesmo dia e horário. 

Tentativa de violação da regra utilizando o POST /api/turmas
{
  "codigo": 5,
  "diaSemana": "SEGUNDA",
  "horario": "A",
  "disciplinaCodigo": "CS101",
  "professorId": 1
}
Resultado: O professor já está alocado a outra turma no mesmo dia e horário.





REGRA 7 - (AulaService)
As aulas ocorrem entre as datas de início e término de cada semestre.
* As aulas são restritas ao período do semestre vigente.

Tentativa de violação da regra utilizando o POST /api/aulas
{
  "data": "2024-07-01",
  "diaSemana": "SEGUNDA",
  "horario": "A",
  "turmaCodigo": 1
}
Resultado: A data da aula está fora do intervalo permitido para o semestre.






REGRA 8 (ManyToOne - entidade Alocacao)
Uma turma pode reservar mais de um recurso.
* O modelo de dados e a lógica de serviço permitem múltiplas alocações de recursos para uma única turma.

Tentativa de violação da regra utilizando o POST /api/alocacoes
{
  "data": "2024-01-15",
  "horario": "A",
  "aulaId": 1,
  "recursoCodigo": 2
}

Resultado: Permitido e recurso inserido




REGRA 9 - (RecursoService)
Os recursos são registrados junto com a turma e não são alterados.
* Não permite que o sistema altere o recurso quando o mesmo está vinculado a uma alocação.

Tentativa de violação da regra utilizando o PUT /api/alocacoes/{id}
ID: 1
{
  "id": 1,
  "data": "2024-09-01",
  "horario": "A",
  "aulaId": 1,
  "recursoCodigo": 4
}
Resultado: O recurso não pode ser alterado porque já está vinculado a uma alocação existente.
